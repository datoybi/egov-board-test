<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.board.service.impl.BoardMapper">

	<resultMap id="board" type="egovframework.example.board.service.BoardVO">
		<result property="idx" column="idx"/>
		<result property="title" column="title"/>
		<result property="contents" column="contents"/>
		<result property="count" column="count"/>
		<result property="writer" column="writer"/>
		<result property="indate" column="indate"/>
	</resultMap>
	
	<update id="updateBoardCount">
		UPDATE TB_BOARD
		SET COUNT=IFNULL(COUNT,0)+1
		WHERE idx = #{idx}
	</update>
	
	<select id="loginCheck" parameterType="BoardVO" resultType="String">
		SELECT USER_NAME
		FROM TB_USER
		WHERE 1=1
		AND PASSWORD = #{password} 
		AND USER_ID = #{userId}
	</select>
	
	<select id="searchBoardList" parameterType="BoardVO" resultType="egovMap">
			SELECT
				 B.IDX as idx
				  , B.TITLE as title
				  , B.CONTENTS as contents
				  , IFNULL(B.COUNT,0) as count
				  , B.WRITER as writer
				  , B.INDATE as indate
				  , U.user_name as writerName
			FROM TB_BOARD B LEFT JOIN TB_USER U
			ON B.writer = U.user_id
			WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">	
					AND	(TITLE LIKE CONCAT('%', #{searchKeyword}, '%'))
			</if>
			ORDER BY IDX DESC	
	</select>
	
	<select id="selectReplyList" parameterType="BoardVO" resultType="egovMap">
			SELECT
				IDX as idx
				  , SEQ as seq
				  , REPLY as reply
				  , WRITER as writer
				  , INDATE as indate
			FROM TB_REPLY
			WHERE 1=1
			AND idx = #{idx}
			ORDER BY SEQ DESC	
	</select>
	
	<insert id="insertBoard" parameterType="BoardVO">
			INSERT INTO TB_BOARD
				( IDX
				, TITLE
				, CONTENTS
				, COUNT
				, WRITER
				, INDATE )
			VALUES ( NULL
				  , #{title}
				  , #{contents}
				  , NULL
				  , #{writer} 
				  , SYSDATE() )

	</insert>

	<insert id="insertReply" parameterType="BoardVO">
			INSERT INTO TB_REPLY
				( IDX
				, SEQ
				, REPLY
				, WRITER
				, INDATE )
			VALUES ( #{idx}
				  , #{seq, jdbcType=VARCHAR}
				  , #{reply}
				  , #{replyWriter} 
				  , SYSDATE() )
				  
	</insert>

	<select id="replytCnt" parameterType="boardVO" resultType="String">
			SELECT COUNT(*) totcnt
			FROM TB_REPLY
			WHERE 1=1 
			AND IDX = #{idx}
			
	</select>
	
	


	<update id="updateBoard">

			UPDATE TB_BOARD
			SET IDX=#{idx}
				, TITLE=#{title}
				, CONTENTS=#{contents}
				, COUNT=#{count}
				, WRITER=#{writer}
				, INDATE=SYSDATE()
				  WHERE IDX=#{idx}

	</update>

	<delete id="deleteBoard">

			DELETE FROM TB_BOARD
			WHERE IDX=#{idx}

	</delete>

	<select id="selectBoard" resultMap="board">
			SELECT
				 B.IDX as idx
				  , B.TITLE as title
				  , B.CONTENTS as contents
				  , IFNULL(B.COUNT,0) as count
				  , B.WRITER as writer
				  , B.INDATE as indate
				  , U.user_name as writerName
			FROM TB_BOARD B LEFT JOIN TB_USER U
			ON B.writer = U.user_id
			WHERE 1=1 
			AND B.IDX = #{idx, jdbcType=VARCHAR}
	</select>

	<select id="selectBoardList" parameterType="boardVO" resultType="egovMap">
			SELECT
				 B.IDX as idx
				  , B.TITLE as title
				  , B.CONTENTS as contents
				  , IFNULL(B.COUNT,0) as count
				  , B.WRITER as writer
				  , B.INDATE as indate
				  , U.user_name as writerName
			FROM TB_BOARD B LEFT JOIN TB_USER U
			ON B.writer = U.user_id
			WHERE 1=1
			ORDER BY IDX DESC
<!-- 			LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
 -->	</select>

	<select id="selectBoardListTotCnt" parameterType="boardVO" resultType="int">

			SELECT COUNT(*) totcnt
			FROM TB_BOARD
			WHERE 1=1 
			
	</select>

</mapper>